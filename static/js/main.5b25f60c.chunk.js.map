{"version":3,"sources":["firebaseConfig.js","DB.js","Pages/LandingPage.js","Components/Loading.js","Pages/DashboardPage.js","Pages/LoadingPage.js","Pages/DocsPage.js","App.js","serviceWorker.js","index.js","img/orderedlistocat.png","img/deckfailcat.png","img/logo-trans.png"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","require","DB","onStateChanged","arguments","length","undefined","Object","classCallCheck","this","firebase","initializeApp","config","auth","onAuthStateChanged","user","_this","success","result","error","provider","GithubAuthProvider","addScope","signInWithPopup","then","console","log","catch","e","_this2","signOut","newName","currentUser","Promise","resolve","reject","updateProfile","displayName","username","userData","database","ref","update","defineProperty","objectSpread","concat","once","data","val","toggle","autocommits","steps","img","logo","title","desc","react_default","a","createElement","href","target","faq","q","LandingPage","s","document","type","async","innerHTML","refs","main","appendChild","map","step","className","key","uuidv1","src","width","height","alt","obj","onClick","props","login","style","role","aria-label","renderSteps","renderFaq","Component","Loading","DashboardPage","possibleConstructorReturn","getPrototypeOf","call","state","dbUser","buttonSpinner","db","getUserFromDB","componentDidMount","setState","_this3","toggleCommits","_this4","email","imgStage2","imgStage1","_this5","photoURL","logout","renderStatusBlock","aria-valuenow","aria-valuemin","aria-valuemax","LoadingPage","DocsPage","App","initialFetchDone","userProfile","timerDone","page","setTimeout","additionalUserInfo","changeUserDisplayName","accessToken","credential","photoUrl","addUserToDB","DocsPage_DocsPage","returnPage","DashboardPage_DashboardPage","onLogOut","changePage","chandePage","bind","LandingPage_LandingPage","onSignInSuccess","renderPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5b25f60c.chunk.js","sourcesContent":["export default {\n  apiKey: \"AIzaSyCSmaCRXRCakWz3Bp2ffvbbDAITtco1iDQ\",\n  authDomain: \"autocommit-7b216.firebaseapp.com\",\n  databaseURL: \"https://autocommit-7b216.firebaseio.com\",\n  projectId: \"autocommit-7b216\",\n  storageBucket: \"autocommit-7b216.appspot.com\",\n  messagingSenderId: \"71888027585\"\n};","import firebase from \"firebase/app\";\nimport config from './firebaseConfig'\n\n// Add additional services that you want to use\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\n\nexport default class DB {\n  constructor(onStateChanged=()=>{}) {\n    this.firebase = firebase;\n    this.firebase.initializeApp(config);\n\n    this.firebase.auth().onAuthStateChanged((user) => {\n      onStateChanged(user);\n    });\n\n    this.user = null;\n  }\n\n  login(success=(result)=>{}, error=()=>{}) {\n    // Start a sign in process for an unauthenticated user.\n    var provider = new firebase.auth.GithubAuthProvider();\n    provider.addScope('repo');\n    firebase.auth().signInWithPopup(provider)\n    .then((result) => {\n      console.log('User successfully logged in.');\n      this.user = result.user;\n      success(result);\n    })\n    .catch(function(e) {\n      console.error('Sign in error', e);\n      error();\n    });\n  }\n\n  logout(success=()=>{}, error=()=>{}) {\n    this.firebase.auth().signOut()\n    .then(() => {\n      console.log('User logged out');\n      this.user = null;\n      success();\n    })\n    .catch(e => {\n      console.error('Sign out error', e);\n      error();\n    })\n  }\n\n  // Changes standart Display name to GitHub username\n  changeUserDisplayName(newName) {\n    const user = this.firebase.auth().currentUser;\n\n    return new Promise((resolve, reject) => {\n      user.updateProfile({\n        displayName: newName\n      }).then(function() {\n        console.log('Display name successfully changed');\n        resolve(user);\n      }, function(e) {\n        console.error('Error changing display name', e);\n      });\n    })\n  }\n\n  // Adds user to DB/users\n  addUserToDB(username, userData, success=()=>{}, error=()=>{}) {\n    const ref = this.firebase.database().ref('users');\n\n    ref.update({\n      [username]: {\n        ...userData\n      }\n    })\n    .then(() => {\n      console.log(`DB ${username} successfully added to database`);\n      success();\n    })\n    .catch(e => {\n      console.error(`DB error adding ${username} to database`);\n      error(e);\n    });\n  }\n\n  // Returns user from DB/users\n  getUserFromDB(username) {\n    const ref = this.firebase.database().ref(`users/${username}`);\n\n    return new Promise((resolve, reject) => {\n      ref.once(\"value\", function(data) {\n        console.log(`Found ${username}`);\n        resolve(data.val());\n      });\n    });\n  }\n\n  toggleCommits(username, toggle) {\n    const ref = this.firebase.database().ref(`users/${username}`);\n\n    return new Promise((resolve, reject) => {\n      ref.update({\n        autocommits: toggle\n      })\n      .then(() => {\n        console.log(`Autocommits for ${username} was set to ${toggle}`);\n        resolve();\n      })\n      .catch(e => {\n        console.error(`Error setting ${username} autocommits to ${toggle}`);\n        reject(e);\n      });\n    });\n  }\n}","import React, { Component } from 'react';\nimport uuidv1 from 'uuid/v1';\n\nimport logo from '../img/logo-trans.png';\n\nconst steps = [\n  { img: logo,\n    title: \"Create 'autocommit' repo\",\n    desc: <span><a href=\"https://github.com/new\" target=\"blank\">Create a new GitHub repo</a> named 'autocommit', that will be used to make auto commits.</span> },\n  { img: require('../img/logo-trans.png'),\n    title: \"Generate your SSH key\",\n    desc: \"After Sign Up in Autocommits, our server will generate you a unique SSH key which is needed to identify our server when it will makes commits for you.\" },\n  { img: require('../img/logo-trans.png'),\n    title: \"Connect key to GitHub\",\n    desc: \"Then you will need to connect this key to your GitHub account in order to make GitHub aware that server represents you.\" },\n  { img: require('../img/logo-trans.png'),\n    title: \"Enable Autocommits\",\n    desc: \"And the last stap will be simple. Just press a button 'Enable' in our Dashboard to enable automatic daily contributions.\" },\n];\n\nconst faq = [\n  { q: \"How do Autocommits works?\",\n    a: <span>Our server is scheduled to run once/day and get from database info about which account has enabled autocommits, then it performs couple of commits directly to 'autocommit' repo.</span> },\n  { q: \"I'm connecting generated key to my GitHub account, how can I know that it will be used only for autocommits?\",\n    a: <span>Connecting SSH key to your account means that owner of the key (server) can perform any actions from your name in GitHub, it's true. But, we are an open-source project, <a href=\"https://github.com/kirillovmr/autocommit\" target=\"blank\">here is our GitHub page</a>, only our server and you knows your unique key. </span> },\n  { q: \"What if I want to stop using Autocommits?\",\n    a: <span>You can stop using Autocommits anytime by deactivating your account in Autocommits Dashboard. Also, you can <a href=\"https://github.com/settings/keys\" target=\"blank\">delete given SSH key from your account</a> anytime you want.</span> }\n];\n\nexport default class LandingPage extends Component {\n\n  componentDidMount() {\n    const phPage = \"http://kirillovmr.com\";\n    const s = document.createElement('script');\n    s.type = \"text/javascript\";\n    s.async = true;\n    s.innerHTML = `!function(t){var e,o=t.url,n=document.getElementsByTagName(\"body\")[0],a=document.createElement(\"script\");a.type=\"text/javascript\",a.async=!0,a.src=o,e=function(){ONPHstart(t)},a.readyState?a.onreadystatechange=function(){\"loaded\"!=a.readyState&&\"complete\"!=a.readyState||(a.onreadystatechange=null,e())}:a.onload=function(){e()},n.appendChild(a)}({on_title:\"Support us on ProductHunt!\",on_description:\"Hey! We're just released on PH, so join the discussion on our page.\",link:\"${phPage}\",button_text:\"Visit Page\",position:\"bottom-left\",design:\"kitty\",display_from: false,from_title:\"Hello Hunter!\",from_description:\"You have a special discount: 20% off. Just use the code below at checkout.\",from_discount:\"HUNTER20\",url:\"https://hypeok.com/onph/onph.js\"});`\n    this.refs.main.appendChild(s);\n  }\n\n  renderSteps() {\n    return steps.map(step => {\n      return (\n        <div className=\"media pt-3\" key={uuidv1()}>\n          <img src={step.img} width=\"32\" height=\"32\" className=\"bd-placeholder-img mr-2 rounded\" alt=\"\" />\n          <p className=\"media-body pb-0 mb-0 small lh-125 border-bottom border-gray pb-2\">\n            <strong className=\"text-gray-dark\">{step.title}</strong>\n            <span className=\"d-block\">{step.desc}</span>\n          </p>\n        </div>\n      );\n    })\n  }\n\n  renderFaq() {\n    return faq.map(obj => {\n      return (\n        <div className=\"media text-light\" key={uuidv1()}>\n          <p className=\"media-body pb-0 mb-0 small lh-125 border-bottom border-gray py-3\">\n            <strong className=\"text-gray-dark\">{obj.q}</strong>\n            <span className=\"d-block ml-3 mt-1\">{obj.a}</span>\n          </p>\n        </div>\n      );\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <nav className=\"navbar navbar-dark bg-dark\">\n            <div className=\"container d-flex justify-content-between\">\n              <span className=\"navbar-brand text-light\">\n                <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top mr-2\" alt=\"\" />\n                Auto Commit\n              </span>\n              <button type=\"button\" onClick={this.props.login} className=\"btn btn-outline-light\"><i className=\"fab fa-github mr-1\"></i> Login</button>\n            </div>\n          </nav>\n        </header>\n        \n        <div className=\"d-flex flex-column justify-content-between\" style={{height: 'calc(100vh - 56px)'}}>\n          <main role=\"main\" ref=\"main\" className=\"container mb-5\">\n            <div className=\"card my-3 rounded shadow\">\n              <img src=\"https://picsum.photos/600/150/?blur\" className=\"card-img-top\" alt=\"...\" />\n              <div className=\"card-body text-center\">\n                <h5 className=\"card-title\"><span role=\"img\" aria-label=\"emoji\">👋</span> Welcome to the automation</h5>\n                <p className=\"card-text\">This service is used to make automatic contributions on GitHub once a day to keep up your activity!</p>\n                <p className=\"card-text text-muted\"><em>\"Simple to enable, free to use, happy to see. Your everyday activity.\"</em></p>\n                <p className=\"card-text\">\n                  <small className=\"text-muted\"><em>Best, Autocommit Team &copy; 2019</em></small>\n                </p>\n              </div>\n            </div>\n\n            <div className=\"d-flex align-items-center p-3 my-3 text-light bg-grey rounded shadow\">\n              <div className=\"lh-100 w100\">\n                <button type=\"button\" onClick={this.props.login} className=\"btn btn-block btn-outline-light\">\n                  <i className=\"fab fa-github mr-1\"></i> Login and Try In Now\n                </button>\n              </div>\n            </div>\n\n            <div className=\"my-3 p-3 bg-white rounded shadow\">\n              <h6 className=\"border-bottom border-gray pb-2 mb-0 d-flex justify-content-between w-100\">\n                <span>\n                  <span role=\"img\" aria-label=\"emoji\">🤔</span> How this magic works?\n                </span>\n                <i className=\"fas fa-magic\"></i>\n              </h6>\n              <span className=\"mt-2 ml-3 d-block text-muted\">\n                Now you will see how it works. To enable Autocommits for your account, we will need some setup steps from you.\n              </span>\n              {this.renderSteps()}\n            </div>\n\n            <div className=\"my-3 p-3 bg-dark text-light rounded shadow\">\n              <h6 className=\"border-bottom border-gray pb-2 mb-0 d-flex justify-content-between w-100\">\n                <span>\n                  <span role=\"img\" aria-label=\"emoji\">🙋‍</span> FAQ\n                </span>\n                <i className=\"fas fa-question\"></i>\n              </h6>\n              {this.renderFaq()}\n            </div>\n          </main>\n\n          <footer className=\"footer bg-dark mt-auto py-3 shadow-lg\">\n            <div className=\"container text-center\">\n              <span className=\"text-light\"><a href=\"https://github.com/kirillovmr/autocommit\" target=\"blank\"><i className=\"fab fa-github mr-1\"></i>autocommit</a></span>\n            </div>\n          </footer>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default function Loading() {\n  return(\n    <div className=\"d-flex justify-content-center w-100\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}","import React, { Component } from 'react';\n\nimport Loading from '../Components/Loading';\n\nimport logo from '../img/logo-trans.png';\nimport imgStage2 from '../img/orderedlistocat.png';\nimport imgStage1 from '../img/deckfailcat.png';\n// Todo\n// Copyright images from https://octodex.github.com/\n\nexport default class DashboardPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // autocommits: false,\n      dbUser: {\n        autocommits: false\n      },\n      buttonSpinner: false\n    }\n  }\n\n  componentDidMount() {\n    console.log('👍 Did Mount run');\n    const username = this.props.user.displayName;\n\n    this.props.db.getUserFromDB(username)\n    .then((dbUser) => {\n      console.log('📡 dbUser got', dbUser);\n      if (!dbUser) return this.componentDidMount();\n      this.setState({\n        dbUser\n      });\n    })\n  }\n\n  toggleCommits(toggle) {\n    const username = this.props.user.displayName;\n\n    this.props.db.toggleCommits(username, toggle)\n    .then(() => {\n      this.setState({\n        dbUser: {\n          ...this.state.dbUser,\n          autocommits: toggle\n        }\n      });\n    });\n  }\n\n  renderStatusBlock() {\n    const imgSrc=()=>{\n      if (this.state.dbUser.autocommits)\n        return imgStage2;\n      return imgStage1;\n    }\n    const title=()=>{\n      if (this.state.dbUser.autocommits)\n        return 'You are enabled 😎';\n      return 'Auto commits disabled 😞';\n    }\n    const text=()=>{\n      if (this.state.dbUser.autocommits)\n        return (\n          <p>Your automatic commits are successfully scheduled and will automatically run each day <code>n</code> times\n          You can disable them any time with button below</p>\n        );\n      return (\n        <p>You account is currently disabled from Autocommit system. <br/>\n        To schedule on your autocommits press <strong>Enable Autocommits</strong> button below.</p>\n      );\n    }\n    const btn=()=>{\n      if (this.state.dbUser.autocommits)\n        return (\n          <span>\n            <button className=\"btn btn-danger\" type=\"button\"\n              onClick={() => this.toggleCommits(false)}\n            >\n              Disable Autocommits\n            </button>\n          </span>\n        );\n      return (\n        <span>\n          <button className=\"btn btn-success\" type=\"button\"\n          onClick={() => this.toggleCommits(true)}\n          >\n            Enable Autocommits\n          </button>\n        </span>\n      );\n    }\n\n    if (!this.state.dbUser.email)\n      return <Loading />\n    return (\n      <div className=\"text-center w-100 mb-2\">\n        <img className=\"mb-1\" src={imgSrc()} alt=\"\" width=\"130\" height=\"130\" />\n        <h1 className=\"h3 mb-3 font-weight-normal\">{title()}</h1>\n        {text()}\n        {btn()}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <nav className=\"navbar navbar-dark bg-dark\">\n            <div className=\"container d-flex justify-content-between\">\n              <span className=\"navbar-brand text-white\">\n                <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top mr-2\" alt=\"\" />\n                Autocommit 2\n              </span>\n              <img src={this.props.user.photoURL} width=\"30\" height=\"30\" className=\"d-inline-block ml-2 user-avatar-sm\" alt=\"\" />\n            </div>\n          </nav>\n        </header>\n\n        <div className=\"d-flex flex-column justify-content-between\" style={{height: 'calc(100vh - 56px)'}}>\n          <main role=\"main\" className=\"container\">\n            <div className=\"d-flex align-items-center p-3 my-3 text-white bg-grey rounded shadow\">\n              <img className=\"mr-3\" src={logo} alt=\"\" width=\"48\" height=\"48\" />\n              <div className=\"lh-100 w100\">\n                <h6 className=\"mb-0 lh-100 d-flex justify-content-between w-100\"><span>GitHub autocommit system</span><i className=\"fas fa-magic\"></i> </h6> \n                <small>This service is used to automatically make contributions on GitHub and keep up your activity.</small>\n              </div>\n            </div>\n\n            <div className=\"my-3 p-3 bg-white rounded shadow\">\n              <h6 className=\"border-bottom border-gray pb-2 mb-0 d-flex justify-content-between w-100\"><span><i className=\"fab fa-github mr-1\"></i> Connected account</span><i className=\"fas fa-user\"></i></h6>\n              <div className=\"media text-muted pt-3\">\n                <img src={this.props.user.photoURL} width=\"32\" height=\"32\" className=\"bd-placeholder-img mr-2 rounded\" alt=\"\" />\n                <p className=\"media-body pb-0 mb-0 small lh-125\">\n                  <span className=\"d-flex justify-content-between align-items-center w-100\">\n                    <strong className=\"text-gray-dark\">@{this.props.user.displayName}</strong>\n                    <span className=\"text-danger text-link\" onClick={() => this.props.logout()}>Logout</span>\n                  </span>\n                  {this.props.user.email}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"my-3 p-3 bg-white rounded shadow\">\n              <h6 className=\"border-bottom border-gray pb-2 mb-0 d-flex justify-content-between w-100\">\n                <span><i className=\"fas fa-cubes mr-1\"></i> Auto commit status</span>\n                <span className={`badge badge-${this.state.dbUser.autocommits ? 'success' : 'danger'}`}>{this.state.dbUser.autocommits ? 'Enabled' : 'Disabled'}</span>\n              </h6>\n              <div className=\"media text-muted pt-3\">\n                {this.renderStatusBlock()}\n              </div>\n            </div>\n\n            <div className=\"my-3 p-3 bg-white rounded shadow\">\n              <h6 className=\"border-bottom border-gray pb-2 mb-0 d-flex justify-content-between w-100\"><span><i className=\"fas fa-server mr-1\"></i> Countdown to next commit</span></h6>\n              <div className=\"progress mt-3\">\n                <div className=\"progress-bar progress-bar-striped bg-success progress-bar-animated\" role=\"progressbar\" style={{width: '25%'}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n              </div>\n            </div>\n          </main>\n\n          <footer className=\"footer mt-auto py-3 shadow-lg\">\n            <div className=\"container text-center\">\n              <span className=\"text-muted\"><a href=\"https://github.com/kirillovmr/autocommit\" target=\"blank\"><i className=\"fab fa-github mr-1\"></i>autocommit</a></span>\n            </div>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './loadingPage.css';\n\nexport default function LoadingPage() {\n  return (\n    <div className=\"text-center\">\n      <div className=\"loading-spinner\"></div>\n    </div>\n  )\n}","import React, { Component } from 'react';\n\nexport default class DocsPage extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Docs page</h1>\n        <p>Docs</p>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport DB from './DB';\nimport './App.css';\n\nimport LandingPage from './Pages/LandingPage';\nimport DashboardPage from './Pages/DashboardPage';\nimport LoadingPage from './Pages/LoadingPage';\nimport DocsPage from './Pages/DocsPage';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.db = new DB((user) => {\n      if (user) {\n        this.setState({\n          initialFetchDone: true,\n          userProfile: user\n        });\n      } else {\n        this.setState({\n          initialFetchDone: true\n        })\n      }\n    });\n\n    this.state = {\n      initialFetchDone: false,\n      timerDone: false,\n      userProfile: null,\n      page: null\n    };\n  }\n\n  componentDidMount() {\n    // Loading timer\n    setTimeout(() => {\n      this.setState({\n        timerDone: true\n      });\n    }, 600)\n  }\n\n  onSignInSuccess(result) {\n    const username = result.additionalUserInfo.username;\n    console.log('📦 Sign in');\n\n    // Try to find user in db\n    this.db.getUserFromDB(username)\n    .then(user => {\n      \n      // Setting autocommits value from DB or false if sign in first time\n      let autocommits = !!user ? user.autocommits : false;\n\n      // Adding GitHub username to Firebase user object\n      this.db.changeUserDisplayName(username).then(user => {\n        const userData = {\n          email: user.email,\n          autocommits,\n          accessToken: result.credential.accessToken,\n          photoUrl: user.photoURL\n        };\n        this.db.addUserToDB(username, userData);\n    \n        this.setState({\n          userProfile: user\n        });\n      });\n    });\n  }\n\n  onLogOut() {\n    this.setState({\n      userProfile: null\n    });\n  }\n\n  chandePage(page) {\n    switch(page){\n      case 'docs':\n        this.setState({page});\n        return;\n      default:\n        return;\n    }\n  }\n\n  returnPage(page) {\n    switch(page) {\n      case 'docs':\n        return <DocsPage />;\n      default:\n        return null;\n    }\n  }\n\n  renderPage() {\n    if (this.state.page)\n      return this.returnPage(this.state.page);\n    if (!this.state.timerDone)\n      return <LoadingPage />\n    if (!this.state.userProfile)\n      return <LandingPage \n        login = {() => this.db.login((result) => this.onSignInSuccess(result))} \n        changePage={this.chandePage.bind(this)}\n      />\n    else\n      return <DashboardPage \n        logout={() => this.db.logout(() => this.onLogOut())}\n        user={this.state.userProfile}\n        changePage={this.chandePage.bind(this)}\n        db={this.db}\n      />\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.renderPage()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/orderedlistocat.c9b87b0e.png\";","module.exports = __webpack_public_path__ + \"static/media/deckfailcat.c99b2b43.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-trans.c7ee7bd9.png\";"],"sourceRoot":""}